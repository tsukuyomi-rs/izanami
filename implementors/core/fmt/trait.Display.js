(function() {var implementors = {};
implementors["izanami"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"izanami/body/struct.Error.html\" title=\"struct izanami::body::Error\">Error</a>",synthetic:false,types:["izanami::body::Error"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"izanami/context/struct.CookieParseError.html\" title=\"struct izanami::context::CookieParseError\">CookieParseError</a>",synthetic:false,types:["izanami::context::CookieParseError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"izanami/context/struct.WsHandshakeError.html\" title=\"struct izanami::context::WsHandshakeError\">WsHandshakeError</a>",synthetic:false,types:["izanami::context::WsHandshakeError"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"izanami/error/struct.BoxedStdCompat.html\" title=\"struct izanami::error::BoxedStdCompat\">BoxedStdCompat</a>",synthetic:false,types:["izanami::error::BoxedStdCompat"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"izanami/error/struct.Error.html\" title=\"struct izanami::error::Error\">Error</a>",synthetic:false,types:["izanami::error::Error"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"izanami/ws/struct.Error.html\" title=\"struct izanami::ws::Error\">Error</a>",synthetic:false,types:["izanami::ws::Error"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()