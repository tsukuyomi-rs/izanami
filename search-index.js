var N=null,E="",T="t",U="u",searchIndex={};
var R=["context","stderror","backtrace","display","compat","error","causes","Attempts to downcast this `Error` to a particular `Fail`…","option","as_fail","Returns a reference to the underlying cause of this…","downcast_ref","downcast_mut","Attempts to downcast this failure to a concrete type by…","find_root_cause","iter_causes","iter_chain","Returns a iterator over all fails up the chain from the…","root_cause","Deprecated alias to `find_root_cause`.","result","to_string","try_from","try_into","borrow_mut","type_id","string","borrow","typeid","formatter","Backtrace","SyncFailure","ResultExt","Context","A set of context values associated with an incoming request.","headermap","extensions","cookiejar","cookieparseerror","localmap","wshandshakeerror","izanami","statuscode","Attempts to downcast this object into the specified…","downcast","into_inner","status_code","to_response","response","Attempts to downcast the underlying error value into the…","An occupied entry.","A vacant entry.","localkey","Handler","Asynchronous HTTP handler dispatched per incoming requests.","poll_http","Polls the response to the client with the specified context.","Middleware","izanami::context","poll_data","izanami::body","size_hint","sizehint","poll_trailers","is_end_stream","izanami::error","izanami::localmap","to_owned","clone_into","izanami::rt","izanami::ws","equivalent","default","websocketconfig","message","content_length","is_empty","HttpBody","HttpBodyExt","HttpError","BoxedStdCompat","AsLocalKey","LocalData","LocalMap","OccupiedEntry","VacantEntry","WebSocketConfig","Launcher","IntoBufStream","CookieParseError","WsHandshakeError","LocalKey","BlockingSection","WebSocket"];
searchIndex["failure"]={"doc":"An experimental new error-handling library. Guide-style…","i":[[3,R[30],"failure","A `Backtrace`.",N,N],[3,"Compat",E,"A compatibility wrapper around an error type from this…",N,N],[3,R[33],E,"An error with context around it.",N,N],[3,R[31],E,"Wrapper for `std` errors to make them `Sync`.",N,N],[3,"Error",E,"The `Error` type, which can contain any failure.",N,N],[3,"Causes",E,"A iterator over the causes of a `Fail`",N,N],[5,"err_msg",E,"Constructs a `Fail` type from a string.",N,[[[R[3]],["sync"],["send"],["debug"]],[R[5]]]],[11,"new",E,"Constructs a new backtrace. This will only create a real…",0,[[],[R[2]]]],[11,R[76],E,"Returns true if displaying this backtrace would be an…",0,[[["self"]],["bool"]]],[11,R[45],E,"Unwraps this into the inner error.",1,[[],["e"]]],[11,"get_ref",E,"Gets a reference to the inner error.",1,[[["self"]],["e"]]],[11,"new",E,"Creates a new context without an underlying error message.",2,[[["d"]],[R[0]]]],[11,"get_context",E,"Returns a reference to the context provided with this error.",2,[[["self"]],["d"]]],[11,"map",E,"Maps `Context<D>` to `Context<T>` by applying a function…",2,[[["f"]],[R[0]]]],[11,"new",E,"Wraps a non-`Sync` `Error` in order to make it implement…",3,[[["e"]],["self"]]],[11,"from_boxed_compat",E,"Creates an `Error` from `Box<std::error::Error>`.",4,[[["box",[R[1]]],[R[1]]],[R[5]]]],[11,R[9],E,"Return a reference to the underlying failure that this…",4,[[["self"]],["fail"]]],[11,"name",E,"Returns the name of the underlying fail.",4,[[["self"]],[[R[8],["str"]],["str"]]]],[11,"cause",E,R[10],4,[[["self"]],["fail"]]],[11,R[2],E,"Gets a reference to the `Backtrace` for this `Error`.",4,[[["self"]],[R[2]]]],[11,R[0],E,"Provides context for this `Error`.",4,[[["send"],["sync"],[R[3]]],[[R[0]],[R[3]],["send"],["sync"]]]],[11,R[4],E,"Wraps `Error` in a compatibility type.",4,[[],[[R[4],[R[5]]],[R[5]]]]],[11,R[44],E,R[7],4,[[],[[R[20],[R[5]]],["fail"],[R[5]]]]],[11,R[14],E,"Returns the \"root cause\" of this error - the last value in…",4,[[["self"]],["fail"]]],[11,R[15],E,"Returns a iterator over the causes of this error with the…",4,[[["self"]],[R[6]]]],[11,R[16],E,R[17],4,[[["self"]],[R[6]]]],[11,R[11],E,R[7],4,[[["self"]],[[R[8]],[T]]]],[11,R[12],E,R[7],4,[[["self"]],[[T],[R[8]]]]],[11,R[18],E,R[19],4,[[["self"]],["fail"]]],[11,R[6],E,"Deprecated alias to `iter_causes`.",4,[[["self"]],[R[6]]]],[6,"Fallible",E,"A common result with an `Error`.",N,N],[8,"AsFail",E,"The `AsFail` trait",N,N],[10,R[9],E,"Converts a reference to `Self` into a dynamic trait object…",5,[[["self"]],["fail"]]],[8,R[32],E,"Extension methods for `Result`.",N,N],[10,R[4],E,"Wraps the error in `Compat` to make it compatible with…",6,[[],[[R[20],[R[4]]],[R[4]]]]],[10,R[0],E,"Wraps the error type in a context type.",6,[[["d"]],[[R[20],[R[0]]],[R[0]]]]],[10,"with_context",E,"Wraps the error type in a context type generated by…",6,[[["f"]],[[R[20],[R[0]]],[R[0]]]]],[8,"Fail",E,"The `Fail` trait.",N,N],[11,"name",E,"Returns the \"name\" of the error.",7,[[["self"]],[[R[8],["str"]],["str"]]]],[11,"cause",E,R[10],7,[[["self"]],[[R[8],["fail"]],["fail"]]]],[11,R[2],E,"Returns a reference to the `Backtrace` carried by this…",7,[[["self"]],[[R[8],[R[2]]],[R[2]]]]],[11,R[0],E,"Provides context for this failure.",7,[[["d"]],[R[0]]]],[11,R[4],E,"Wraps this failure in a compatibility wrapper that…",7,[[],[R[4]]]],[11,R[11],E,R[13],7,[[["self"]],[[R[8]],[T]]]],[11,R[12],E,R[13],7,[[["self"]],[[T],[R[8]]]]],[11,R[14],E,"Returns the \"root cause\" of this `Fail` - the last value…",7,[[["self"]],["fail"]]],[11,R[15],E,"Returns a iterator over the causes of this `Fail` with the…",7,[[["self"]],[R[6]]]],[11,R[16],E,R[17],7,[[["self"]],[R[6]]]],[11,R[18],E,R[19],7,[[["self"]],["fail"]]],[11,R[6],E,"Deprecated alias to `iter_chain`.",7,[[["self"]],[R[6]]]],[14,"bail",E,"Exits a function early with an `Error`.",N,N],[14,"ensure",E,"Exits a function early with an `Error` if the condition is…",N,N],[14,"format_err",E,"Constructs an `Error` using the standard string…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[["self"]],[R[26]]]],[11,"into",E,E,0,[[],[U]]],[11,R[22],E,E,0,[[[U]],[R[20]]]],[11,R[23],E,E,0,[[],[R[20]]]],[11,R[24],E,E,0,[[["self"]],[T]]],[11,R[27],E,E,0,[[["self"]],[T]]],[11,R[25],E,E,0,[[["self"]],[R[28]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[21],E,E,1,[[["self"]],[R[26]]]],[11,R[67],E,E,1,[[["self"]],[T]]],[11,R[68],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[[U]],[R[20]]]],[11,R[23],E,E,1,[[],[R[20]]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[27],E,E,1,[[["self"]],[T]]],[11,R[25],E,E,1,[[["self"]],[R[28]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[21],E,E,2,[[["self"]],[R[26]]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[[U]],[R[20]]]],[11,R[23],E,E,2,[[],[R[20]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[28]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[["self"]],[R[26]]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[[U]],[R[20]]]],[11,R[23],E,E,3,[[],[R[20]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[28]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[["self"]],[R[26]]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[[U]],[R[20]]]],[11,R[23],E,E,4,[[],[R[20]]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[28]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into_iter",E,E,8,[[],["i"]]],[11,"into",E,E,8,[[],[U]]],[11,R[22],E,E,8,[[[U]],[R[20]]]],[11,R[23],E,E,8,[[],[R[20]]]],[11,R[24],E,E,8,[[["self"]],[T]]],[11,R[27],E,E,8,[[["self"]],[T]]],[11,R[25],E,E,8,[[["self"]],[R[28]]]],[11,R[9],E,E,7,[[["self"]],["fail"]]],[11,R[9],E,E,4,[[["self"]],["fail"]]],[11,"name",E,E,2,[[["self"]],[[R[8],["str"]],["str"]]]],[11,"cause",E,E,2,[[["self"]],[[R[8],["fail"]],["fail"]]]],[11,R[2],E,E,2,[[["self"]],[[R[8],[R[2]]],[R[2]]]]],[11,"from",E,E,2,[[["d"]],[R[0]]]],[11,"from",E,E,4,[[["f"]],[R[5]]]],[11,"next",E,E,8,[[["self"]],[[R[8],["fail"]],["fail"]]]],[11,"as_ref",E,E,4,[[["self"]],["fail"]]],[11,R[72],E,E,0,[[],[R[2]]]],[11,R[72],E,E,1,[[],[R[4]]]],[11,"clone",E,E,1,[[["self"]],[R[4]]]],[11,"eq",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[4]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,0,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,1,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,4,[[["self"],[R[29]]],[R[20]]]],[11,"hash",E,E,1,[[["self"],["__he"]]]],[11,"description",E,E,1,[[["self"]],["str"]]]],"p":[[3,R[30]],[3,"Compat"],[3,R[33]],[3,R[31]],[3,"Error"],[8,"AsFail"],[8,R[32]],[8,"Fail"],[3,"Causes"]]};
searchIndex["izanami"]={"doc":"A lightweight Web server interface for building Web…","i":[[3,R[33],R[41],R[34],N,N],[3,R[87],E,"Web application launcher.",N,N],[0,"body",E,E,N,N],[3,R[88],R[60],"A wrapper for `HttpBody` for lifting the instance into a…",N,N],[3,"Body",E,E,N,N],[3,"Data",E,"A chunk of bytes produced by `ResponseBody`.",N,N],[3,"Error",E,"The type of error values caused by `Body`.",N,N],[8,R[77],E,"A trait that abstracts HTTP request/response bodies.",N,N],[16,"Data",E,"The type of bytes generated by this body.",0,N],[16,"Error",E,"The error type that will be returned from this body.",0,N],[10,R[59],E,"Polls the next data of this body.",0,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,R[61],E,"Returns the hint of remaining length of data.",0,[[["self"]],[R[62]]]],[11,R[63],E,"Polls the trailing header map of this body.",0,[[["self"]],[["poll",[R[8]]],[R[8],[R[35]]]]]],[11,R[64],E,"Returns whether the body has been completed emitting all…",0,[[["self"]],["bool"]]],[11,R[75],E,"Returns the length of total bytes contained in this body.",0,[[["self"]],[[R[8],["u64"]],["u64"]]]],[8,R[78],E,"An extension trait for adding some adaptor methods to…",N,N],[11,"into_buf_stream",E,"Lift this body into a `BufStream`.",1,[[],["intobufstream"]]],[11,"empty",E,"Creates an empty `Body`.",2,[[],["self"]]],[11,"from_buf",E,E,3,[[["b"]],["self"]]],[0,R[0],R[41],"HTTP-specific context values.",N,N],[3,R[33],R[58],R[34],N,N],[3,R[89],E,E,N,N],[3,R[90],E,E,N,N],[5,"set_tls",E,"Set a reference to the request context to task local…",N,[[[R[0]],["f"]],["r"]]],[5,"get_tls",E,"Retrieve a reference to the request context from task…",N,[[["f"]],["r"]]],[11,"protocol_version",E,E,4,[[["self"]],["version"]]],[11,"method",E,E,4,[[["self"]],["method"]]],[11,"uri",E,E,4,[[["self"]],["uri"]]],[11,"path",E,E,4,[[["self"]],["str"]]],[11,"query",E,E,4,[[["self"]],[[R[8],["str"]],["str"]]]],[11,"headers",E,E,4,[[["self"]],[R[35]]]],[11,R[36],E,E,4,[[["self"]],[R[36]]]],[11,"body",E,E,4,[[["self"]],[["body"],[R[8],["body"]]]]],[11,"cookies",E,E,4,[[["self"]],[[R[37]],[R[38]],[R[20],[R[37],R[38]]]]]],[11,"response_headers",E,E,4,[[["self"]],[R[35]]]],[11,"locals",E,E,4,[[["self"]],[R[39]]]],[11,"locals_mut",E,E,4,[[["self"]],[R[39]]]],[11,"start_websocket",E,E,4,[[["self"]],[[R[20],[R[8],R[40]]],[R[40]],[R[8]]]]],[0,R[5],R[41],"Error representation during handling the request.",N,N],[3,R[80],R[65],"A wrapper type for treating arbitrary error type as an…",N,N],[3,"Error",E,"A type that contains arbitrary HTTP error values.",N,N],[5,"err_msg",E,"Creates an `Error` from the specified message and HTTP…",N,[[[R[42]],["d"]],[R[5]]]],[5,"bad_request",E,"Equivalent to `err_msg(StatusCode::BAD_REQUEST, msg)`.",N,[[["d"]],[R[5]]]],[5,"unauthorized",E,"Equivalent to `err_msg(StatusCode::UNAUTHORIZED, msg)`.",N,[[["d"]],[R[5]]]],[5,"forbidden",E,"Equivalent to `err_msg(StatusCode::FORBIDDEN, msg)`.",N,[[["d"]],[R[5]]]],[5,"not_found",E,"Equivalent to `err_msg(StatusCode::NOT_FOUND, msg)`.",N,[[["d"]],[R[5]]]],[5,"method_not_allowed",E,"Equivalent to `err_msg(StatusCode::METHOD_NOT_ALLOWED,…",N,[[["d"]],[R[5]]]],[5,"internal_server_error",E,"Equivalent to `err_msg(StatusCode::INTERNAL_SERVER_ERROR,…",N,[[["d"]],[R[5]]]],[6,"Result",E,"A type alias of `Result<T, E>` with `error::Error` as…",N,N],[8,R[79],E,"A trait representing error values to be converted into an…",N,N],[10,R[46],E,"Returns an HTTP status code associated with this error…",5,[[["self"]],[R[42]]]],[11,R[47],E,"Creates an HTTP response from this error value.",5,[[["self"]],[R[48]]]],[11,"is",E,"Returns whether the concrete type of this object is the…",5,[[["self"]],["bool"]]],[11,R[11],E,R[43],5,[[["self"]],[[R[8]],[T]]]],[11,R[12],E,R[43],5,[[["self"]],[[T],[R[8]]]]],[11,R[44],E,R[43],5,[[["box"]],[["box"],["box"],[R[20],["box","box"]]]]],[11,R[45],E,E,6,[[],[[R[5]],["box",[R[5]]]]]],[11,"get_ref",E,E,6,[[["self"]],[R[5]]]],[11,R[44],E,E,6,[[],[R[20]]]],[11,R[11],E,E,6,[[["self"]],[[R[8]],[T]]]],[11,R[46],E,"Returns an HTTP status code associated with the underlying…",7,[[["self"]],[R[42]]]],[11,R[47],E,"Creates an HTTP response from the underlying error value.",7,[[["self"]],[R[48]]]],[11,R[44],E,R[49],7,[[],[["httperror"],[R[20]]]]],[11,R[11],E,R[49],7,[[["self"]],[[R[8]],[T]]]],[0,"handler",R[41],"Definition of `Handler`.",N,N],[8,R[53],"izanami::handler",R[54],N,N],[16,"Body",E,E,8,N],[16,"Error",E,E,8,N],[10,R[55],E,R[56],8,[[["self"],[R[0]]],[[R[48]],["poll",[R[48]]]]]],[0,R[39],R[41],"Typed map for managing request-local data.",N,N],[3,R[91],R[66],"A type representing a key for request-local data stored in…",N,N],[3,"KeyId",E,"Identifier of `LocalKey`s.",N,N],[3,R[83],E,"A typed map storing request-local data.",N,N],[3,R[84],E,R[50],N,N],[3,R[85],E,R[51],N,N],[4,"Entry",E,"A view into a single entry in a `LocalMap`.",N,N],[13,"Occupied",E,R[50],9,N],[13,"Vacant",E,R[51],9,N],[8,R[81],E,"A trait that behaves as a `LocalKey`.",N,N],[16,"Data",E,"The data type associated with this key.",10,N],[10,"id",E,"Returns the identifier representation of this key.",10,[[["self"]],["keyid"]]],[8,R[82],E,"A trait representing a data to be stored in `LocalMap`s.",N,N],[18,"KEY",E,"The value of `LocalKey` associated with this type.",11,N],[11,R[27],E,"Acquires a reference to `Self` stored in the specified…",11,[[[R[39]]],[[R[8]],["self"]]]],[11,R[24],E,"Acquires a mutable reference to `Self` stored in the…",11,[[[R[39]]],[["self"],[R[8]]]]],[11,"contains",E,"Returns `true` if a value of `Self` is stored in the…",11,[[[R[39]]],["bool"]]],[11,"take_from",E,"Extracts the instance of `Self` stored in the specified…",11,[[[R[39]]],[R[8]]]],[11,"insert_into",E,"Stores itself into the specified localmap.",11,[[[R[39]]],[R[8]]]],[11,"entry",E,"Creates an `Entry` for in-place manipulation corresponds…",11,[[[R[39]]],[[R[52]],["entry",[R[52]]]]]],[11,"get",E,"Returns a shared reference to the value corresponding to…",12,[[["self"],["k"]],[R[8]]]],[11,"get_mut",E,"Returns a mutable reference to the value corresponding to…",12,[[["self"],["k"]],[R[8]]]],[11,"contains_key",E,"Returns `true` if the map contains a value for the…",12,[[["self"],["k"]],["bool"]]],[11,"insert",E,"Inserts a value corresponding to the provided `LocalKey`…",12,[[["self"],["k"]],[R[8]]]],[11,"remove",E,"Removes a value corresponding to the provided `LocalKey`…",12,[[["self"],["k"]],[R[8]]]],[11,"entry",E,"Create a `Entry` for in-place manipulation corresponds to…",12,[[["self"],["k"]],["entry"]]],[11,"or_insert",E,E,9,[[]]],[11,"or_insert_with",E,E,9,[[["f"]]]],[11,"or_default",E,E,9,[[]]],[11,"key",E,E,9,[[["self"]],["k"]]],[11,"and_modify",E,E,9,[[["f"]],["self"]]],[11,"key",E,E,13,[[["self"]],["k"]]],[11,"remove_entry",E,E,13,[[]]],[11,"get",E,E,13,[[["self"]]]],[11,"get_mut",E,E,13,[[["self"]]]],[11,"into_mut",E,E,13,[[]]],[11,"insert",E,E,13,[[["self"]]]],[11,"remove",E,E,13,[[]]],[11,"key",E,E,14,[[["self"]],["k"]]],[11,"into_key",E,E,14,[[],["k"]]],[11,"insert",E,E,14,[[]]],[0,"middleware",R[41],E,N,N],[8,R[57],"izanami::middleware",E,N,N],[16,"Body",E,E,15,N],[16,"Error",E,E,15,N],[16,R[53],E,E,15,N],[10,"wrap",E,E,15,[[["self"],["h"]]]],[0,"rt",R[41],"Miscellaneous utilities for interaction with the…",N,N],[3,R[92],R[69],"The future that enters a blocking section of code.",N,N],[5,"blocking_section",E,"Creates a `Future` to enter the specified blocking section…",N,[[["f"]],["blockingsection"]]],[0,"ws",R[41],"WebSocket specific context values.",N,N],[3,R[86],R[70],"The configuration for WebSocket connection.",N,N],[12,"max_send_queue",E,"The size of the send queue. You can use it to turn on/off…",16,N],[12,"max_message_size",E,"The maximum size of a message. `None` means no size limit.…",16,N],[12,"max_frame_size",E,"The maximum size of a single message frame. `None` means…",16,N],[4,"Message",E,"An enum representing the various forms of a WebSocket…",N,N],[13,"Text",E,"A text WebSocket message",17,N],[13,"Binary",E,"A binary WebSocket message",17,N],[13,"Ping",E,"A ping message with the specified payload",17,N],[13,"Pong",E,"A pong message with the specified payload",17,N],[3,R[93],E,E,N,N],[3,"Error",E,E,N,N],[11,"new",R[41],E,18,[[[T]],[R[20]]]],[11,"use_h1",E,E,18,[[["self"],["h1"]]]],[11,"use_h2",E,E,18,[[["self"],["h2"]]]],[11,"bind",E,E,18,[[["self"],["a"]],[R[20]]]],[11,"run_forever",E,E,18,[[]]],[8,"App",E,"The main trait that abstracts Web applications.",N,N],[16,"Body",E,E,19,N],[16,"Error",E,E,19,N],[16,R[53],E,E,19,N],[10,"new_handler",E,"Creates an instance of `Handler` to handle an incoming…",19,[[["self"]]]],[8,R[53],E,R[54],N,N],[16,"Body",E,E,8,N],[16,"Error",E,E,8,N],[10,R[55],E,R[56],8,[[["self"],[R[0]]],[[R[48]],["poll",[R[48]]]]]],[8,R[57],E,E,N,N],[16,"Body",E,E,15,N],[16,"Error",E,E,15,N],[16,R[53],E,E,15,N],[10,"wrap",E,E,15,[[["self"],["h"]]]],[14,"local_key",E,"A macro to create a `LocalKey<T>`.",N,N],[11,"from",R[58],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[[U]],[R[20]]]],[11,R[23],E,E,4,[[],[R[20]]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[25],E,E,4,[[["self"]],[R[28]]]],[11,"from",R[41],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[22],E,E,18,[[[U]],[R[20]]]],[11,R[23],E,E,18,[[],[R[20]]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[27],E,E,18,[[["self"]],[T]]],[11,R[25],E,E,18,[[["self"]],[R[28]]]],[11,R[59],R[60],E,20,[[["self"]],[[R[20],["async"]],["async",[R[8]]]]]],[11,R[61],E,E,20,[[["self"]],[R[62]]]],[11,R[63],E,E,20,[[["self"]],[[R[20],["async"]],["async",[R[8]]]]]],[11,R[64],E,E,20,[[["self"]],["bool"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[22],E,E,20,[[[U]],[R[20]]]],[11,R[23],E,E,20,[[],[R[20]]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[27],E,E,20,[[["self"]],[T]]],[11,R[25],E,E,20,[[["self"]],[R[28]]]],[11,R[59],E,E,20,[[["self"]],[[R[20],["async"]],["async",[R[8]]]]]],[11,R[61],E,E,20,[[["self"]],[R[62]]]],[11,R[63],E,E,20,[[["self"]],[[R[20],["async"]],["async",[R[8]]]]]],[11,R[64],E,E,20,[[["self"]],["bool"]]],[11,R[59],E,E,2,[[["self"]],[[R[20],["async"]],["async",[R[8]]]]]],[11,R[61],E,E,2,[[["self"]],[R[62]]]],[11,R[63],E,E,2,[[["self"]],[[R[20],["async"]],["async",[R[8]]]]]],[11,R[64],E,E,2,[[["self"]],["bool"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[[U]],[R[20]]]],[11,R[23],E,E,2,[[],[R[20]]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[25],E,E,2,[[["self"]],[R[28]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[22],E,E,3,[[[U]],[R[20]]]],[11,R[23],E,E,3,[[],[R[20]]]],[11,R[24],E,E,3,[[["self"]],[T]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[25],E,E,3,[[["self"]],[R[28]]]],[11,"into_buf",E,E,3,[[],[T]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[21],E,E,21,[[["self"]],[R[26]]]],[11,"into",E,E,21,[[],[U]]],[11,R[22],E,E,21,[[[U]],[R[20]]]],[11,R[23],E,E,21,[[],[R[20]]]],[11,R[24],E,E,21,[[["self"]],[T]]],[11,R[27],E,E,21,[[["self"]],[T]]],[11,R[25],E,E,21,[[["self"]],[R[28]]]],[11,R[9],E,E,21,[[["self"]],["fail"]]],[11,"from",R[58],E,22,[[[T]],[T]]],[11,R[21],E,E,22,[[["self"]],[R[26]]]],[11,"into",E,E,22,[[],[U]]],[11,R[22],E,E,22,[[[U]],[R[20]]]],[11,R[23],E,E,22,[[],[R[20]]]],[11,R[24],E,E,22,[[["self"]],[T]]],[11,R[27],E,E,22,[[["self"]],[T]]],[11,R[25],E,E,22,[[["self"]],[R[28]]]],[11,R[9],E,E,22,[[["self"]],["fail"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[21],E,E,23,[[["self"]],[R[26]]]],[11,"into",E,E,23,[[],[U]]],[11,R[22],E,E,23,[[[U]],[R[20]]]],[11,R[23],E,E,23,[[],[R[20]]]],[11,R[24],E,E,23,[[["self"]],[T]]],[11,R[27],E,E,23,[[["self"]],[T]]],[11,R[25],E,E,23,[[["self"]],[R[28]]]],[11,R[9],E,E,23,[[["self"]],["fail"]]],[11,"from",R[65],E,6,[[[T]],[T]]],[11,R[21],E,E,6,[[["self"]],[R[26]]]],[11,"into",E,E,6,[[],[U]]],[11,R[22],E,E,6,[[[U]],[R[20]]]],[11,R[23],E,E,6,[[],[R[20]]]],[11,R[24],E,E,6,[[["self"]],[T]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[25],E,E,6,[[["self"]],[R[28]]]],[11,R[9],E,E,6,[[["self"]],["fail"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[21],E,E,7,[[["self"]],[R[26]]]],[11,"into",E,E,7,[[],[U]]],[11,R[22],E,E,7,[[[U]],[R[20]]]],[11,R[23],E,E,7,[[],[R[20]]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[25],E,E,7,[[["self"]],[R[28]]]],[11,R[9],E,E,7,[[["self"]],["fail"]]],[11,"from",R[66],E,24,[[[T]],[T]]],[11,R[67],E,E,24,[[["self"]],[T]]],[11,R[68],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,R[22],E,E,24,[[[U]],[R[20]]]],[11,R[23],E,E,24,[[],[R[20]]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[27],E,E,24,[[["self"]],[T]]],[11,R[25],E,E,24,[[["self"]],[R[28]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[22],E,E,25,[[[U]],[R[20]]]],[11,R[23],E,E,25,[[],[R[20]]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[27],E,E,25,[[["self"]],[T]]],[11,R[25],E,E,25,[[["self"]],[R[28]]]],[11,R[71],E,E,25,[[["self"],["k"]],["bool"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[22],E,E,12,[[[U]],[R[20]]]],[11,R[23],E,E,12,[[],[R[20]]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[27],E,E,12,[[["self"]],[T]]],[11,R[25],E,E,12,[[["self"]],[R[28]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[22],E,E,13,[[[U]],[R[20]]]],[11,R[23],E,E,13,[[],[R[20]]]],[11,R[24],E,E,13,[[["self"]],[T]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[25],E,E,13,[[["self"]],[R[28]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[22],E,E,14,[[[U]],[R[20]]]],[11,R[23],E,E,14,[[],[R[20]]]],[11,R[24],E,E,14,[[["self"]],[T]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[25],E,E,14,[[["self"]],[R[28]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[22],E,E,9,[[[U]],[R[20]]]],[11,R[23],E,E,9,[[],[R[20]]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[27],E,E,9,[[["self"]],[T]]],[11,R[25],E,E,9,[[["self"]],[R[28]]]],[11,"from",R[69],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[22],E,E,26,[[[U]],[R[20]]]],[11,R[23],E,E,26,[[],[R[20]]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[27],E,E,26,[[["self"]],[T]]],[11,R[25],E,E,26,[[["self"]],[R[28]]]],[11,"into_future",E,E,26,[[],["f"]]],[11,"from",R[70],E,16,[[[T]],[T]]],[11,R[67],E,E,16,[[["self"]],[T]]],[11,R[68],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,R[22],E,E,16,[[[U]],[R[20]]]],[11,R[23],E,E,16,[[],[R[20]]]],[11,R[24],E,E,16,[[["self"]],[T]]],[11,R[27],E,E,16,[[["self"]],[T]]],[11,R[25],E,E,16,[[["self"]],[R[28]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[21],E,E,17,[[["self"]],[R[26]]]],[11,R[67],E,E,17,[[["self"]],[T]]],[11,R[68],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,R[22],E,E,17,[[[U]],[R[20]]]],[11,R[23],E,E,17,[[],[R[20]]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[27],E,E,17,[[["self"]],[T]]],[11,R[25],E,E,17,[[["self"]],[R[28]]]],[11,R[71],E,E,17,[[["self"],["k"]],["bool"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[22],E,E,27,[[[U]],[R[20]]]],[11,R[23],E,E,27,[[],[R[20]]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[27],E,E,27,[[["self"]],[T]]],[11,R[25],E,E,27,[[["self"]],[R[28]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[21],E,E,28,[[["self"]],[R[26]]]],[11,"into",E,E,28,[[],[U]]],[11,R[22],E,E,28,[[[U]],[R[20]]]],[11,R[23],E,E,28,[[],[R[20]]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[27],E,E,28,[[["self"]],[T]]],[11,R[25],E,E,28,[[["self"]],[R[28]]]],[11,R[9],E,E,28,[[["self"]],["fail"]]],[11,"clone",E,E,17,[[["self"]],[R[74]]]],[11,"clone",E,E,16,[[["self"]],[R[73]]]],[11,"fmt",E,E,16,[[["self"],[R[29]]],[[R[20],[R[5]]],[R[5]]]]],[11,"fmt",E,E,17,[[["self"],[R[29]]],[[R[20],[R[5]]],[R[5]]]]],[11,"fmt",E,E,17,[[["self"],[R[29]]],[[R[20],[R[5]]],[R[5]]]]],[11,R[72],E,E,16,[[],[R[73]]]],[11,"from",E,E,17,[[["vec",["u8"]],["u8"]],[R[74]]]],[11,"from",E,E,17,[[["str"]],[R[74]]]],[11,"from",E,E,17,[[],[R[74]]]],[11,"from",E,E,17,[[[R[26]]],[R[74]]]],[11,"eq",E,E,17,[[["self"],[R[74]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[74]]],["bool"]]],[11,"into",E,E,17,[[],[["vec",["u8"]],["u8"]]]],[11,R[59],R[60],E,2,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,R[61],E,E,2,[[["self"]],[R[62]]]],[11,R[63],E,E,2,[[["self"]],[["poll",[R[8]]],[R[8],[R[35]]]]]],[11,R[64],E,E,2,[[["self"]],["bool"]]],[11,R[75],E,E,2,[[["self"]],[[R[8],["u64"]],["u64"]]]],[11,R[46],R[58],E,23,[[["self"]],[R[42]]]],[11,R[46],R[65],E,6,[[["self"]],[R[42]]]],[11,"id",R[66],E,24,[[["self"]],["keyid"]]],[11,"from",R[60],E,2,[[],["self"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[[R[26]]],["self"]]],[11,"from",E,E,2,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",E,E,2,[[["bytes"]],["self"]]],[11,"from",E,E,3,[[["bytes"]],["self"]]],[11,"from",R[65],E,7,[[["e"]],["self"]]],[11,"from",E,E,7,[[[R[42]]],["self"]]],[11,"from",E,E,7,[[[R[5]],["box",[R[5]]]],["self"]]],[11,"as_ref",R[60],E,3,[[["self"]]]],[11,R[72],E,E,2,[[],["self"]]],[11,R[72],R[66],E,12,[[],[R[39]]]],[11,"clone",E,E,24,[[["self"]],["self"]]],[11,"eq",E,E,25,[[["self"],["keyid"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["keyid"]],["bool"]]],[11,"fmt",R[60],E,21,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[58],E,22,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,23,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[65],E,6,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[70],E,28,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[60],E,20,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,2,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,3,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,21,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[58],E,4,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,22,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,23,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[65],E,6,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,7,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[66],E,24,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,25,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,12,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,9,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,13,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,14,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[69],E,26,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[70],E,27,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",E,E,28,[[["self"],[R[29]]],[R[20]]]],[11,"fmt",R[41],E,18,[[["self"],[R[29]]],[R[20]]]],[11,"hash",R[66],E,25,[[["self"],["__h"]]]],[11,"source",R[60],E,21,[[["self"]],[[R[8],[R[5]]],[R[5]]]]],[11,"source",R[58],E,22,[[["self"]],[[R[5]],[R[8],[R[5]]]]]],[11,"source",R[70],E,28,[[["self"]],[[R[8],[R[5]]],[R[5]]]]],[11,"remaining",R[60],E,3,[[["self"]],["usize"]]],[11,"bytes",E,E,3,[[["self"]]]],[11,"advance",E,E,3,[[["self"],["usize"]]]],[11,"poll",R[69],E,26,[[["self"]],["poll"]]],[11,"poll",R[70],E,27,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"start_send",E,E,27,[[["self"]],["startsend"]]],[11,"poll_complete",E,E,27,[[["self"]],["poll"]]],[11,"close",E,E,27,[[["self"]],["poll"]]],[11,"poll_buf",R[60],E,20,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,R[61],E,E,20,[[["self"]],[R[62]]]],[11,R[9],R[65],E,7,[[["self"]],["fail"]]],[11,"name",E,E,6,[[["self"]],[[R[8],["str"]],["str"]]]],[11,"cause",E,E,6,[[["self"]],[["fail"],[R[8],["fail"]]]]],[11,R[2],E,E,6,[[["self"]],[[R[2]],[R[8],[R[2]]]]]],[11,"text",R[70],"Create a new text WebSocket message from a stringable.",17,[[["s"]],[R[74]]]],[11,"binary",E,"Create a new binary WebSocket message by converting to Vec.",17,[[["b"]],[R[74]]]],[11,"is_text",E,"Indicates whether a message is a text message.",17,[[["self"]],["bool"]]],[11,"is_binary",E,"Indicates whether a message is a binary message.",17,[[["self"]],["bool"]]],[11,"is_ping",E,"Indicates whether a message is a ping message.",17,[[["self"]],["bool"]]],[11,"is_pong",E,"Indicates whether a message is a pong message.",17,[[["self"]],["bool"]]],[11,"len",E,"Get the length of the WebSocket message.",17,[[["self"]],["usize"]]],[11,R[76],E,"Returns true if the WebSocket message has no content. For…",17,[[["self"]],["bool"]]],[11,"into_data",E,"Consume the WebSocket and return it as binary data.",17,[[],[["vec",["u8"]],["u8"]]]],[11,"into_text",E,"Attempt to consume the WebSocket message and convert it to…",17,[[],[[R[5]],[R[20],[R[26],R[5]]],[R[26]]]]],[11,"to_text",E,"Attempt to get a &str from the WebSocket message, this…",17,[[["self"]],[[R[5]],[R[20],["str",R[5]]],["str"]]]]],"p":[[8,R[77]],[8,R[78]],[3,"Body"],[3,"Data"],[3,R[33]],[8,R[79]],[3,R[80]],[3,"Error"],[8,R[53]],[4,"Entry"],[8,R[81]],[8,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[8,R[57]],[3,R[86]],[4,"Message"],[3,R[87]],[8,"App"],[3,R[88]],[3,"Error"],[3,R[89]],[3,R[90]],[3,R[91]],[3,"KeyId"],[3,R[92]],[3,R[93]],[3,"Error"]]};
searchIndex["izanami_xtask"]={"doc":E,"i":[],"p":[]};
searchIndex["tower_service"]={"doc":"Definition of the core `Service` trait to Tower","i":[[8,"Service","tower_service","An asynchronous function from `Request` to a `Response`.",N,N],[16,"Response",E,"Responses given by the service.",0,N],[16,"Error",E,"Errors produced by the service.",0,N],[16,"Future",E,"The future response value.",0,N],[10,"poll_ready",E,"Returns `Ready` when the service is able to process…",0,[[["self"]],["poll"]]],[10,"call",E,"Process the request and return the response asynchronously.",0,[[["self"],["request"]]]]],"p":[[8,"Service"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);