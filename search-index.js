var N=null,E="",T="t",U="u",searchIndex={};
var R=["option","izanami","Context","A set of context values associated with an incoming request.","context","method","headermap","extensions","cookieparseerror","cookiejar","wshandshakeerror","statuscode","Attempts to downcast this object into the specified…","downcast","downcast_ref","status_code","to_response","response","result","Attempts to downcast the underlying error value into the…","Handler","Asynchronous HTTP handler dispatched per incoming requests.","poll_http","Polls the response to the client with the specified context.","izanami::context","try_from","try_into","borrow_mut","poll_data","izanami::body","size_hint","sizehint","poll_trailers","is_end_stream","type_id","borrow","typeid","to_string","as_fail","izanami::error","string","izanami::ws","to_owned","clone_into","message","websocketconfig","formatter","content_length","backtrace","HttpBody","HttpBodyExt","HttpError","BoxedStdCompat","WebSocketConfig","Launcher","IntoBufStream","CookieParseError","WsHandshakeError","WebSocket"];

searchIndex["izanami"]={"doc":"A lightweight Web server interface for building Web…","i":[[3,R[2],R[1],R[3],N,N],[3,R[54],E,"Web application launcher.",N,N],[0,"body",E,E,N,N],[3,R[55],R[29],"A wrapper for `HttpBody` for lifting the instance into a…",N,N],[3,"Body",E,E,N,N],[3,"Data",E,"A chunk of bytes produced by `ResponseBody`.",N,N],[3,"Error",E,"The type of error values caused by `Body`.",N,N],[8,R[49],E,"A trait that abstracts HTTP request/response bodies.",N,N],[16,"Data",E,"The type of bytes generated by this body.",0,N],[16,"Error",E,"The error type that will be returned from this body.",0,N],[10,R[28],E,"Polls the next data of this body.",0,[[["self"]],[["poll",[R[0]]],[R[0]]]]],[11,R[30],E,"Returns the hint of remaining length of data.",0,[[["self"]],[R[31]]]],[11,R[32],E,"Polls the trailing header map of this body.",0,[[["self"]],[["poll",[R[0]]],[R[0],[R[6]]]]]],[11,R[33],E,"Returns whether the body has been completed emitting all…",0,[[["self"]],["bool"]]],[11,R[47],E,"Returns the length of total bytes contained in this body.",0,[[["self"]],[[R[0],["u64"]],["u64"]]]],[8,R[50],E,"An extension trait for adding some adaptor methods to…",N,N],[11,"into_buf_stream",E,"Lift this body into a `BufStream`.",1,[[],["intobufstream"]]],[11,"empty",E,"Creates an empty `Body`.",2,[[],["self"]]],[11,"from_buf",E,E,3,[[["b"]],["self"]]],[0,R[4],R[1],"HTTP-specific context values.",N,N],[3,R[2],R[24],R[3],N,N],[3,R[56],E,E,N,N],[3,R[57],E,E,N,N],[5,"set_tls",E,"Set a reference to the request context to task local…",N,[[[R[4]],["f"]],["r"]]],[5,"get_tls",E,"Retrieve a reference to the request context from task…",N,[[["f"]],["r"]]],[11,"protocol_version",E,E,4,[[["self"]],["version"]]],[11,R[5],E,E,4,[[["self"]],[R[5]]]],[11,"uri",E,E,4,[[["self"]],["uri"]]],[11,"path",E,E,4,[[["self"]],["str"]]],[11,"query",E,E,4,[[["self"]],[["str"],[R[0],["str"]]]]],[11,"headers",E,E,4,[[["self"]],[R[6]]]],[11,R[7],E,E,4,[[["self"]],[R[7]]]],[11,"body",E,E,4,[[["self"]],[[R[0],["body"]],["body"]]]],[11,"cookies",E,E,4,[[["self"]],[[R[8]],[R[18],[R[9],R[8]]],[R[9]]]]],[11,"response_headers",E,E,4,[[["self"]],[R[6]]]],[11,"start_websocket",E,E,4,[[["self"]],[[R[0]],[R[18],[R[0],R[10]]],[R[10]]]]],[0,"error",R[1],"Error representation during handling the request.",N,N],[3,R[52],R[39],"A wrapper type for treating arbitrary error type as an…",N,N],[3,"Error",E,"A type that contains arbitrary HTTP error values.",N,N],[5,"err_msg",E,"Creates an `Error` from the specified message and HTTP…",N,[[["d"],[R[11]]],["error"]]],[5,"bad_request",E,"Equivalent to `err_msg(StatusCode::BAD_REQUEST, msg)`.",N,[[["d"]],["error"]]],[5,"unauthorized",E,"Equivalent to `err_msg(StatusCode::UNAUTHORIZED, msg)`.",N,[[["d"]],["error"]]],[5,"forbidden",E,"Equivalent to `err_msg(StatusCode::FORBIDDEN, msg)`.",N,[[["d"]],["error"]]],[5,"not_found",E,"Equivalent to `err_msg(StatusCode::NOT_FOUND, msg)`.",N,[[["d"]],["error"]]],[5,"method_not_allowed",E,"Equivalent to `err_msg(StatusCode::METHOD_NOT_ALLOWED,…",N,[[["d"]],["error"]]],[5,"internal_server_error",E,"Equivalent to `err_msg(StatusCode::INTERNAL_SERVER_ERROR,…",N,[[["d"]],["error"]]],[6,"Result",E,"A type alias of `Result<T, E>` with `error::Error` as…",N,N],[8,R[51],E,"A trait representing error values to be converted into an…",N,N],[10,R[15],E,"Returns an HTTP status code associated with this error…",5,[[["self"]],[R[11]]]],[11,R[16],E,"Creates an HTTP response from this error value.",5,[[["self"]],[R[17]]]],[11,"is",E,"Returns whether the concrete type of this object is the…",5,[[["self"]],["bool"]]],[11,R[14],E,R[12],5,[[["self"]],[[R[0]],[T]]]],[11,"downcast_mut",E,R[12],5,[[["self"]],[[T],[R[0]]]]],[11,R[13],E,R[12],5,[[["box"]],[[R[18],["box","box"]],["box"],["box"]]]],[11,"into_inner",E,E,6,[[],[["box",["error"]],["error"]]]],[11,"get_ref",E,E,6,[[["self"]],["error"]]],[11,R[13],E,E,6,[[],[R[18]]]],[11,R[14],E,E,6,[[["self"]],[[R[0]],[T]]]],[11,R[15],E,"Returns an HTTP status code associated with the underlying…",7,[[["self"]],[R[11]]]],[11,R[16],E,"Creates an HTTP response from the underlying error value.",7,[[["self"]],[R[17]]]],[11,R[13],E,R[19],7,[[],[["httperror"],[R[18]]]]],[11,R[14],E,R[19],7,[[["self"]],[[R[0]],[T]]]],[0,"handler",R[1],"Definition of `Handler`.",N,N],[8,R[20],"izanami::handler",R[21],N,N],[16,"Body",E,E,8,N],[16,"Error",E,E,8,N],[10,R[22],E,R[23],8,[[["self"],[R[4]]],[[R[17]],["poll",[R[17]]]]]],[0,"ws",R[1],"WebSocket specific context values.",N,N],[3,R[53],R[41],"The configuration for WebSocket connection.",N,N],[12,"max_send_queue",E,"The size of the send queue. You can use it to turn on/off…",9,N],[12,"max_message_size",E,"The maximum size of a message. `None` means no size limit.…",9,N],[12,"max_frame_size",E,"The maximum size of a single message frame. `None` means…",9,N],[4,"Message",E,"An enum representing the various forms of a WebSocket…",N,N],[13,"Text",E,"A text WebSocket message",10,N],[13,"Binary",E,"A binary WebSocket message",10,N],[13,"Ping",E,"A ping message with the specified payload",10,N],[13,"Pong",E,"A pong message with the specified payload",10,N],[3,R[58],E,E,N,N],[3,"Error",E,E,N,N],[11,"new",R[1],E,11,[[[T]],[R[18]]]],[11,"use_h1",E,E,11,[[["self"],["h1"]]]],[11,"use_h2",E,E,11,[[["self"],["h2"]]]],[11,"bind",E,E,11,[[["a"],["self"]],[R[18]]]],[11,"run_forever",E,E,11,[[]]],[8,"App",E,"The main trait that abstracts Web applications.",N,N],[16,"Body",E,E,12,N],[16,"Error",E,E,12,N],[16,R[20],E,E,12,N],[10,"new_handler",E,"Creates an instance of `Handler` to handle an incoming…",12,[[["self"]]]],[8,R[20],E,R[21],N,N],[16,"Body",E,E,8,N],[16,"Error",E,E,8,N],[10,R[22],E,R[23],8,[[["self"],[R[4]]],[[R[17]],["poll",[R[17]]]]]],[11,"into",R[24],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[25],E,E,4,[[[U]],[R[18]]]],[11,R[26],E,E,4,[[],[R[18]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[27],E,E,4,[[["self"]],[T]]],[11,R[34],E,E,4,[[["self"]],[R[36]]]],[11,"into",R[1],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[25],E,E,11,[[[U]],[R[18]]]],[11,R[26],E,E,11,[[],[R[18]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[27],E,E,11,[[["self"]],[T]]],[11,R[34],E,E,11,[[["self"]],[R[36]]]],[11,R[28],R[29],E,13,[[["self"]],[["async",[R[0]]],[R[18],["async"]]]]],[11,R[30],E,E,13,[[["self"]],[R[31]]]],[11,R[32],E,E,13,[[["self"]],[["async",[R[0]]],[R[18],["async"]]]]],[11,R[33],E,E,13,[[["self"]],["bool"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[25],E,E,13,[[[U]],[R[18]]]],[11,R[26],E,E,13,[[],[R[18]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[27],E,E,13,[[["self"]],[T]]],[11,R[34],E,E,13,[[["self"]],[R[36]]]],[11,R[28],E,E,13,[[["self"]],[[R[18],["async"]],["async",[R[0]]]]]],[11,R[30],E,E,13,[[["self"]],[R[31]]]],[11,R[32],E,E,13,[[["self"]],[["async",[R[0]]],[R[18],["async"]]]]],[11,R[33],E,E,13,[[["self"]],["bool"]]],[11,R[28],E,E,2,[[["self"]],[["async",[R[0]]],[R[18],["async"]]]]],[11,R[30],E,E,2,[[["self"]],[R[31]]]],[11,R[32],E,E,2,[[["self"]],[["async",[R[0]]],[R[18],["async"]]]]],[11,R[33],E,E,2,[[["self"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[25],E,E,2,[[[U]],[R[18]]]],[11,R[26],E,E,2,[[],[R[18]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[27],E,E,2,[[["self"]],[T]]],[11,R[34],E,E,2,[[["self"]],[R[36]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[25],E,E,3,[[[U]],[R[18]]]],[11,R[26],E,E,3,[[],[R[18]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[27],E,E,3,[[["self"]],[T]]],[11,R[34],E,E,3,[[["self"]],[R[36]]]],[11,"into_buf",E,E,3,[[],[T]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[37],E,E,14,[[["self"]],[R[40]]]],[11,R[25],E,E,14,[[[U]],[R[18]]]],[11,R[26],E,E,14,[[],[R[18]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[27],E,E,14,[[["self"]],[T]]],[11,R[34],E,E,14,[[["self"]],[R[36]]]],[11,R[38],E,E,14,[[["self"]],["fail"]]],[11,"into",R[24],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[37],E,E,15,[[["self"]],[R[40]]]],[11,R[25],E,E,15,[[[U]],[R[18]]]],[11,R[26],E,E,15,[[],[R[18]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[27],E,E,15,[[["self"]],[T]]],[11,R[34],E,E,15,[[["self"]],[R[36]]]],[11,R[38],E,E,15,[[["self"]],["fail"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[37],E,E,16,[[["self"]],[R[40]]]],[11,R[25],E,E,16,[[[U]],[R[18]]]],[11,R[26],E,E,16,[[],[R[18]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[27],E,E,16,[[["self"]],[T]]],[11,R[34],E,E,16,[[["self"]],[R[36]]]],[11,R[38],E,E,16,[[["self"]],["fail"]]],[11,"into",R[39],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[37],E,E,6,[[["self"]],[R[40]]]],[11,R[25],E,E,6,[[[U]],[R[18]]]],[11,R[26],E,E,6,[[],[R[18]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[27],E,E,6,[[["self"]],[T]]],[11,R[34],E,E,6,[[["self"]],[R[36]]]],[11,R[38],E,E,6,[[["self"]],["fail"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[37],E,E,7,[[["self"]],[R[40]]]],[11,R[25],E,E,7,[[[U]],[R[18]]]],[11,R[26],E,E,7,[[],[R[18]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[27],E,E,7,[[["self"]],[T]]],[11,R[34],E,E,7,[[["self"]],[R[36]]]],[11,R[38],E,E,7,[[["self"]],["fail"]]],[11,"into",R[41],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[42],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"],[T]]]],[11,R[25],E,E,9,[[[U]],[R[18]]]],[11,R[26],E,E,9,[[],[R[18]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[27],E,E,9,[[["self"]],[T]]],[11,R[34],E,E,9,[[["self"]],[R[36]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[42],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"],[T]]]],[11,R[37],E,E,10,[[["self"]],[R[40]]]],[11,R[25],E,E,10,[[[U]],[R[18]]]],[11,R[26],E,E,10,[[],[R[18]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[27],E,E,10,[[["self"]],[T]]],[11,R[34],E,E,10,[[["self"]],[R[36]]]],[11,"equivalent",E,E,10,[[["k"],["self"]],["bool"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[25],E,E,17,[[[U]],[R[18]]]],[11,R[26],E,E,17,[[],[R[18]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[27],E,E,17,[[["self"]],[T]]],[11,R[34],E,E,17,[[["self"]],[R[36]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[37],E,E,18,[[["self"]],[R[40]]]],[11,R[25],E,E,18,[[[U]],[R[18]]]],[11,R[26],E,E,18,[[],[R[18]]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[27],E,E,18,[[["self"]],[T]]],[11,R[34],E,E,18,[[["self"]],[R[36]]]],[11,R[38],E,E,18,[[["self"]],["fail"]]],[11,"into",E,E,10,[[],[["u8"],["vec",["u8"]]]]],[11,"default",E,E,9,[[],[R[45]]]],[11,"from",E,E,10,[[["str"]],[R[44]]]],[11,"from",E,E,10,[[],[R[44]]]],[11,"from",E,E,10,[[[R[40]]],[R[44]]]],[11,"from",E,E,10,[[["vec",["u8"]],["u8"]],[R[44]]]],[11,"clone",E,E,9,[[["self"]],[R[45]]]],[11,"clone",E,E,10,[[["self"]],[R[44]]]],[11,"eq",E,E,10,[[[R[44]],["self"]],["bool"]]],[11,"ne",E,E,10,[[[R[44]],["self"]],["bool"]]],[11,"fmt",E,E,10,[[[R[46]],["self"]],[[R[18],["error"]],["error"]]]],[11,"fmt",E,E,9,[[[R[46]],["self"]],[[R[18],["error"]],["error"]]]],[11,"fmt",E,E,10,[[[R[46]],["self"]],[[R[18],["error"]],["error"]]]],[11,R[28],R[29],E,2,[[["self"]],[["poll",[R[0]]],[R[0]]]]],[11,R[30],E,E,2,[[["self"]],[R[31]]]],[11,R[32],E,E,2,[[["self"]],[["poll",[R[0]]],[R[0],[R[6]]]]]],[11,R[33],E,E,2,[[["self"]],["bool"]]],[11,R[47],E,E,2,[[["self"]],[[R[0],["u64"]],["u64"]]]],[11,R[15],R[24],E,16,[[["self"]],[R[11]]]],[11,R[15],R[39],E,6,[[["self"]],[R[11]]]],[11,"as_ref",R[29],E,3,[[["self"]]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[[R[40]]],["self"]]],[11,"from",E,E,2,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",E,E,2,[[["bytes"]],["self"]]],[11,"from",E,E,3,[[["bytes"]],["self"]]],[11,"from",R[39],E,7,[[["e"]],["self"]]],[11,"from",E,E,7,[[[R[11]]],["self"]]],[11,"from",E,E,7,[[["box",["error"]],["error"]],["self"]]],[11,"default",R[29],E,2,[[],["self"]]],[11,"fmt",E,E,14,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",R[24],E,15,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",E,E,16,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",R[39],E,6,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",E,E,7,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",R[41],E,18,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",R[29],E,13,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",E,E,2,[[[R[46]],["self"]],[R[18]]]],[11,"fmt",E,E,3,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",E,E,14,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",R[24],E,4,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",E,E,15,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",E,E,16,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",R[39],E,6,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",E,E,7,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",R[41],E,17,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",E,E,18,[[["self"],[R[46]]],[R[18]]]],[11,"fmt",R[1],E,11,[[["self"],[R[46]]],[R[18]]]],[11,"source",R[29],E,14,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"source",R[24],E,15,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"source",R[41],E,18,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"remaining",R[29],E,3,[[["self"]],["usize"]]],[11,"bytes",E,E,3,[[["self"]]]],[11,"advance",E,E,3,[[["self"],["usize"]]]],[11,"poll",R[41],E,17,[[["self"]],[[R[0]],["poll",[R[0]]]]]],[11,"start_send",E,E,17,[[["self"]],["startsend"]]],[11,"poll_complete",E,E,17,[[["self"]],["poll"]]],[11,"close",E,E,17,[[["self"]],["poll"]]],[11,"poll_buf",R[29],E,13,[[["self"]],[["poll",[R[0]]],[R[0]]]]],[11,R[30],E,E,13,[[["self"]],[R[31]]]],[11,R[38],R[39],E,7,[[["self"]],["fail"]]],[11,"name",E,E,6,[[["self"]],[["str"],[R[0],["str"]]]]],[11,"cause",E,E,6,[[["self"]],[[R[0],["fail"]],["fail"]]]],[11,R[48],E,E,6,[[["self"]],[[R[0],[R[48]]],[R[48]]]]],[11,"text",R[41],"Create a new text WebSocket message from a stringable.",10,[[["s"]],[R[44]]]],[11,"binary",E,"Create a new binary WebSocket message by converting to Vec.",10,[[["b"]],[R[44]]]],[11,"is_text",E,"Indicates whether a message is a text message.",10,[[["self"]],["bool"]]],[11,"is_binary",E,"Indicates whether a message is a binary message.",10,[[["self"]],["bool"]]],[11,"is_ping",E,"Indicates whether a message is a ping message.",10,[[["self"]],["bool"]]],[11,"is_pong",E,"Indicates whether a message is a pong message.",10,[[["self"]],["bool"]]],[11,"len",E,"Get the length of the WebSocket message.",10,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if the WebSocket message has no content. For…",10,[[["self"]],["bool"]]],[11,"into_data",E,"Consume the WebSocket and return it as binary data.",10,[[],[["u8"],["vec",["u8"]]]]],[11,"into_text",E,"Attempt to consume the WebSocket message and convert it to…",10,[[],[["error"],[R[18],[R[40],"error"]],[R[40]]]]],[11,"to_text",E,"Attempt to get a &str from the WebSocket message, this…",10,[[["self"]],[["str"],["error"],[R[18],["str","error"]]]]]],"p":[[8,R[49]],[8,R[50]],[3,"Body"],[3,"Data"],[3,R[2]],[8,R[51]],[3,R[52]],[3,"Error"],[8,R[20]],[3,R[53]],[4,"Message"],[3,R[54]],[8,"App"],[3,R[55]],[3,"Error"],[3,R[56]],[3,R[57]],[3,R[58]],[3,"Error"]]};
searchIndex["izanami_xtask"]={"doc":E,"i":[],"p":[]};
addSearchOptions(searchIndex);initSearch(searchIndex);