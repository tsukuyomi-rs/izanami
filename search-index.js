var N=null,E="",T="t",U="u",searchIndex={};
var R=["option","izanami","Context","A set of context values associated with an incoming request.","context","method","headermap","extensions","cookieparseerror","cookiejar","localmap","wshandshakeerror","statuscode","Attempts to downcast this object into the specified…","downcast","downcast_ref","status_code","to_response","response","result","Attempts to downcast the underlying error value into the…","An occupied entry.","A vacant entry.","localkey","Handler","Asynchronous HTTP handler dispatched per incoming requests.","poll_http","Polls the response to the client with the specified context.","Middleware","izanami::context","borrow_mut","try_from","try_into","poll_data","izanami::body","size_hint","sizehint","poll_trailers","is_end_stream","type_id","borrow","typeid","to_string","as_fail","izanami::error","string","izanami::localmap","izanami::rt","izanami::ws","to_owned","clone_into","equivalent","message","websocketconfig","formatter","content_length","default","backtrace","HttpBody","HttpBodyExt","HttpError","BoxedStdCompat","AsLocalKey","LocalData","LocalMap","OccupiedEntry","VacantEntry","WebSocketConfig","Launcher","IntoBufStream","CookieParseError","WsHandshakeError","LocalKey","BlockingSection","WebSocket"];

searchIndex["izanami"]={"doc":"A lightweight Web server interface for building Web…","i":[[3,R[2],R[1],R[3],N,N],[3,R[68],E,"Web application launcher.",N,N],[0,"body",E,E,N,N],[3,R[69],R[34],"A wrapper for `HttpBody` for lifting the instance into a…",N,N],[3,"Body",E,E,N,N],[3,"Data",E,"A chunk of bytes produced by `ResponseBody`.",N,N],[3,"Error",E,"The type of error values caused by `Body`.",N,N],[8,R[58],E,"A trait that abstracts HTTP request/response bodies.",N,N],[16,"Data",E,"The type of bytes generated by this body.",0,N],[16,"Error",E,"The error type that will be returned from this body.",0,N],[10,R[33],E,"Polls the next data of this body.",0,[[["self"]],[["poll",[R[0]]],[R[0]]]]],[11,R[35],E,"Returns the hint of remaining length of data.",0,[[["self"]],[R[36]]]],[11,R[37],E,"Polls the trailing header map of this body.",0,[[["self"]],[["poll",[R[0]]],[R[0],[R[6]]]]]],[11,R[38],E,"Returns whether the body has been completed emitting all…",0,[[["self"]],["bool"]]],[11,R[55],E,"Returns the length of total bytes contained in this body.",0,[[["self"]],[[R[0],["u64"]],["u64"]]]],[8,R[59],E,"An extension trait for adding some adaptor methods to…",N,N],[11,"into_buf_stream",E,"Lift this body into a `BufStream`.",1,[[],["intobufstream"]]],[11,"empty",E,"Creates an empty `Body`.",2,[[],["self"]]],[11,"from_buf",E,E,3,[[["b"]],["self"]]],[0,R[4],R[1],"HTTP-specific context values.",N,N],[3,R[2],R[29],R[3],N,N],[3,R[70],E,E,N,N],[3,R[71],E,E,N,N],[5,"set_tls",E,"Set a reference to the request context to task local…",N,[[[R[4]],["f"]],["r"]]],[5,"get_tls",E,"Retrieve a reference to the request context from task…",N,[[["f"]],["r"]]],[11,"protocol_version",E,E,4,[[["self"]],["version"]]],[11,R[5],E,E,4,[[["self"]],[R[5]]]],[11,"uri",E,E,4,[[["self"]],["uri"]]],[11,"path",E,E,4,[[["self"]],["str"]]],[11,"query",E,E,4,[[["self"]],[["str"],[R[0],["str"]]]]],[11,"headers",E,E,4,[[["self"]],[R[6]]]],[11,R[7],E,E,4,[[["self"]],[R[7]]]],[11,"body",E,E,4,[[["self"]],[[R[0],["body"]],["body"]]]],[11,"cookies",E,E,4,[[["self"]],[[R[8]],[R[19],[R[9],R[8]]],[R[9]]]]],[11,"response_headers",E,E,4,[[["self"]],[R[6]]]],[11,"locals",E,E,4,[[["self"]],[R[10]]]],[11,"locals_mut",E,E,4,[[["self"]],[R[10]]]],[11,"start_websocket",E,E,4,[[["self"]],[[R[19],[R[0],R[11]]],[R[11]],[R[0]]]]],[0,"error",R[1],"Error representation during handling the request.",N,N],[3,R[61],R[44],"A wrapper type for treating arbitrary error type as an…",N,N],[3,"Error",E,"A type that contains arbitrary HTTP error values.",N,N],[5,"err_msg",E,"Creates an `Error` from the specified message and HTTP…",N,[[["d"],[R[12]]],["error"]]],[5,"bad_request",E,"Equivalent to `err_msg(StatusCode::BAD_REQUEST, msg)`.",N,[[["d"]],["error"]]],[5,"unauthorized",E,"Equivalent to `err_msg(StatusCode::UNAUTHORIZED, msg)`.",N,[[["d"]],["error"]]],[5,"forbidden",E,"Equivalent to `err_msg(StatusCode::FORBIDDEN, msg)`.",N,[[["d"]],["error"]]],[5,"not_found",E,"Equivalent to `err_msg(StatusCode::NOT_FOUND, msg)`.",N,[[["d"]],["error"]]],[5,"method_not_allowed",E,"Equivalent to `err_msg(StatusCode::METHOD_NOT_ALLOWED,…",N,[[["d"]],["error"]]],[5,"internal_server_error",E,"Equivalent to `err_msg(StatusCode::INTERNAL_SERVER_ERROR,…",N,[[["d"]],["error"]]],[6,"Result",E,"A type alias of `Result<T, E>` with `error::Error` as…",N,N],[8,R[60],E,"A trait representing error values to be converted into an…",N,N],[10,R[16],E,"Returns an HTTP status code associated with this error…",5,[[["self"]],[R[12]]]],[11,R[17],E,"Creates an HTTP response from this error value.",5,[[["self"]],[R[18]]]],[11,"is",E,"Returns whether the concrete type of this object is the…",5,[[["self"]],["bool"]]],[11,R[15],E,R[13],5,[[["self"]],[[R[0]],[T]]]],[11,"downcast_mut",E,R[13],5,[[["self"]],[[T],[R[0]]]]],[11,R[14],E,R[13],5,[[["box"]],[[R[19],["box","box"]],["box"],["box"]]]],[11,"into_inner",E,E,6,[[],[["box",["error"]],["error"]]]],[11,"get_ref",E,E,6,[[["self"]],["error"]]],[11,R[14],E,E,6,[[],[R[19]]]],[11,R[15],E,E,6,[[["self"]],[[R[0]],[T]]]],[11,R[16],E,"Returns an HTTP status code associated with the underlying…",7,[[["self"]],[R[12]]]],[11,R[17],E,"Creates an HTTP response from the underlying error value.",7,[[["self"]],[R[18]]]],[11,R[14],E,R[20],7,[[],[["httperror"],[R[19]]]]],[11,R[15],E,R[20],7,[[["self"]],[[R[0]],[T]]]],[0,"handler",R[1],"Definition of `Handler`.",N,N],[8,R[24],"izanami::handler",R[25],N,N],[16,"Body",E,E,8,N],[16,"Error",E,E,8,N],[10,R[26],E,R[27],8,[[["self"],[R[4]]],[["poll",[R[18]]],[R[18]]]]],[0,R[10],R[1],"Typed map for managing request-local data.",N,N],[3,R[72],R[46],"A type representing a key for request-local data stored in…",N,N],[3,"KeyId",E,"Identifier of `LocalKey`s.",N,N],[3,R[64],E,"A typed map storing request-local data.",N,N],[3,R[65],E,R[21],N,N],[3,R[66],E,R[22],N,N],[4,"Entry",E,"A view into a single entry in a `LocalMap`.",N,N],[13,"Occupied",E,R[21],9,N],[13,"Vacant",E,R[22],9,N],[8,R[62],E,"A trait that behaves as a `LocalKey`.",N,N],[16,"Data",E,"The data type associated with this key.",10,N],[10,"id",E,"Returns the identifier representation of this key.",10,[[["self"]],["keyid"]]],[8,R[63],E,"A trait representing a data to be stored in `LocalMap`s.",N,N],[18,"KEY",E,"The value of `LocalKey` associated with this type.",11,N],[11,R[40],E,"Acquires a reference to `Self` stored in the specified…",11,[[[R[10]]],[[R[0]],["self"]]]],[11,R[30],E,"Acquires a mutable reference to `Self` stored in the…",11,[[[R[10]]],[[R[0]],["self"]]]],[11,"contains",E,"Returns `true` if a value of `Self` is stored in the…",11,[[[R[10]]],["bool"]]],[11,"take_from",E,"Extracts the instance of `Self` stored in the specified…",11,[[[R[10]]],[R[0]]]],[11,"insert_into",E,"Stores itself into the specified localmap.",11,[[[R[10]]],[R[0]]]],[11,"entry",E,"Creates an `Entry` for in-place manipulation corresponds…",11,[[[R[10]]],[["entry",[R[23]]],[R[23]]]]],[11,"get",E,"Returns a shared reference to the value corresponding to…",12,[[["self"],["k"]],[R[0]]]],[11,"get_mut",E,"Returns a mutable reference to the value corresponding to…",12,[[["self"],["k"]],[R[0]]]],[11,"contains_key",E,"Returns `true` if the map contains a value for the…",12,[[["self"],["k"]],["bool"]]],[11,"insert",E,"Inserts a value corresponding to the provided `LocalKey`…",12,[[["self"],["k"]],[R[0]]]],[11,"remove",E,"Removes a value corresponding to the provided `LocalKey`…",12,[[["self"],["k"]],[R[0]]]],[11,"entry",E,"Create a `Entry` for in-place manipulation corresponds to…",12,[[["self"],["k"]],["entry"]]],[11,"or_insert",E,E,9,[[]]],[11,"or_insert_with",E,E,9,[[["f"]]]],[11,"or_default",E,E,9,[[]]],[11,"key",E,E,9,[[["self"]],["k"]]],[11,"and_modify",E,E,9,[[["f"]],["self"]]],[11,"key",E,E,13,[[["self"]],["k"]]],[11,"remove_entry",E,E,13,[[]]],[11,"get",E,E,13,[[["self"]]]],[11,"get_mut",E,E,13,[[["self"]]]],[11,"into_mut",E,E,13,[[]]],[11,"insert",E,E,13,[[["self"]]]],[11,"remove",E,E,13,[[]]],[11,"key",E,E,14,[[["self"]],["k"]]],[11,"into_key",E,E,14,[[],["k"]]],[11,"insert",E,E,14,[[]]],[0,"middleware",R[1],E,N,N],[8,R[28],"izanami::middleware",E,N,N],[16,"Body",E,E,15,N],[16,"Error",E,E,15,N],[16,R[24],E,E,15,N],[10,"wrap",E,E,15,[[["self"],["h"]]]],[0,"rt",R[1],"Miscellaneous utilities for interaction with the…",N,N],[3,R[73],R[47],"The future that enters a blocking section of code.",N,N],[5,"blocking_section",E,"Creates a `Future` to enter the specified blocking section…",N,[[["f"]],["blockingsection"]]],[0,"ws",R[1],"WebSocket specific context values.",N,N],[3,R[67],R[48],"The configuration for WebSocket connection.",N,N],[12,"max_send_queue",E,"The size of the send queue. You can use it to turn on/off…",16,N],[12,"max_message_size",E,"The maximum size of a message. `None` means no size limit.…",16,N],[12,"max_frame_size",E,"The maximum size of a single message frame. `None` means…",16,N],[4,"Message",E,"An enum representing the various forms of a WebSocket…",N,N],[13,"Text",E,"A text WebSocket message",17,N],[13,"Binary",E,"A binary WebSocket message",17,N],[13,"Ping",E,"A ping message with the specified payload",17,N],[13,"Pong",E,"A pong message with the specified payload",17,N],[3,R[74],E,E,N,N],[3,"Error",E,E,N,N],[11,"new",R[1],E,18,[[[T]],[R[19]]]],[11,"use_h1",E,E,18,[[["self"],["h1"]]]],[11,"use_h2",E,E,18,[[["self"],["h2"]]]],[11,"bind",E,E,18,[[["a"],["self"]],[R[19]]]],[11,"run_forever",E,E,18,[[]]],[8,"App",E,"The main trait that abstracts Web applications.",N,N],[16,"Body",E,E,19,N],[16,"Error",E,E,19,N],[16,R[24],E,E,19,N],[10,"new_handler",E,"Creates an instance of `Handler` to handle an incoming…",19,[[["self"]]]],[8,R[24],E,R[25],N,N],[16,"Body",E,E,8,N],[16,"Error",E,E,8,N],[10,R[26],E,R[27],8,[[["self"],[R[4]]],[["poll",[R[18]]],[R[18]]]]],[8,R[28],E,E,N,N],[16,"Body",E,E,15,N],[16,"Error",E,E,15,N],[16,R[24],E,E,15,N],[10,"wrap",E,E,15,[[["self"],["h"]]]],[14,"local_key",E,"A macro to create a `LocalKey<T>`.",N,N],[11,"into",R[29],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[31],E,E,4,[[[U]],[R[19]]]],[11,R[32],E,E,4,[[],[R[19]]]],[11,R[40],E,E,4,[[["self"]],[T]]],[11,R[30],E,E,4,[[["self"]],[T]]],[11,R[39],E,E,4,[[["self"]],[R[41]]]],[11,"into",R[1],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[31],E,E,18,[[[U]],[R[19]]]],[11,R[32],E,E,18,[[],[R[19]]]],[11,R[40],E,E,18,[[["self"]],[T]]],[11,R[30],E,E,18,[[["self"]],[T]]],[11,R[39],E,E,18,[[["self"]],[R[41]]]],[11,R[33],R[34],E,20,[[["self"]],[["async",[R[0]]],[R[19],["async"]]]]],[11,R[35],E,E,20,[[["self"]],[R[36]]]],[11,R[37],E,E,20,[[["self"]],[["async",[R[0]]],[R[19],["async"]]]]],[11,R[38],E,E,20,[[["self"]],["bool"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[31],E,E,20,[[[U]],[R[19]]]],[11,R[32],E,E,20,[[],[R[19]]]],[11,R[40],E,E,20,[[["self"]],[T]]],[11,R[30],E,E,20,[[["self"]],[T]]],[11,R[39],E,E,20,[[["self"]],[R[41]]]],[11,R[33],E,E,20,[[["self"]],[[R[19],["async"]],["async",[R[0]]]]]],[11,R[35],E,E,20,[[["self"]],[R[36]]]],[11,R[37],E,E,20,[[["self"]],[["async",[R[0]]],[R[19],["async"]]]]],[11,R[38],E,E,20,[[["self"]],["bool"]]],[11,R[33],E,E,2,[[["self"]],[["async",[R[0]]],[R[19],["async"]]]]],[11,R[35],E,E,2,[[["self"]],[R[36]]]],[11,R[37],E,E,2,[[["self"]],[["async",[R[0]]],[R[19],["async"]]]]],[11,R[38],E,E,2,[[["self"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[31],E,E,2,[[[U]],[R[19]]]],[11,R[32],E,E,2,[[],[R[19]]]],[11,R[40],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"]],[T]]],[11,R[39],E,E,2,[[["self"]],[R[41]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[31],E,E,3,[[[U]],[R[19]]]],[11,R[32],E,E,3,[[],[R[19]]]],[11,R[40],E,E,3,[[["self"]],[T]]],[11,R[30],E,E,3,[[["self"]],[T]]],[11,R[39],E,E,3,[[["self"]],[R[41]]]],[11,"into_buf",E,E,3,[[],[T]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[42],E,E,21,[[["self"]],[R[45]]]],[11,R[31],E,E,21,[[[U]],[R[19]]]],[11,R[32],E,E,21,[[],[R[19]]]],[11,R[40],E,E,21,[[["self"]],[T]]],[11,R[30],E,E,21,[[["self"]],[T]]],[11,R[39],E,E,21,[[["self"]],[R[41]]]],[11,R[43],E,E,21,[[["self"]],["fail"]]],[11,"into",R[29],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[42],E,E,22,[[["self"]],[R[45]]]],[11,R[31],E,E,22,[[[U]],[R[19]]]],[11,R[32],E,E,22,[[],[R[19]]]],[11,R[40],E,E,22,[[["self"]],[T]]],[11,R[30],E,E,22,[[["self"]],[T]]],[11,R[39],E,E,22,[[["self"]],[R[41]]]],[11,R[43],E,E,22,[[["self"]],["fail"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[42],E,E,23,[[["self"]],[R[45]]]],[11,R[31],E,E,23,[[[U]],[R[19]]]],[11,R[32],E,E,23,[[],[R[19]]]],[11,R[40],E,E,23,[[["self"]],[T]]],[11,R[30],E,E,23,[[["self"]],[T]]],[11,R[39],E,E,23,[[["self"]],[R[41]]]],[11,R[43],E,E,23,[[["self"]],["fail"]]],[11,"into",R[44],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[42],E,E,6,[[["self"]],[R[45]]]],[11,R[31],E,E,6,[[[U]],[R[19]]]],[11,R[32],E,E,6,[[],[R[19]]]],[11,R[40],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"]],[T]]],[11,R[39],E,E,6,[[["self"]],[R[41]]]],[11,R[43],E,E,6,[[["self"]],["fail"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[42],E,E,7,[[["self"]],[R[45]]]],[11,R[31],E,E,7,[[[U]],[R[19]]]],[11,R[32],E,E,7,[[],[R[19]]]],[11,R[40],E,E,7,[[["self"]],[T]]],[11,R[30],E,E,7,[[["self"]],[T]]],[11,R[39],E,E,7,[[["self"]],[R[41]]]],[11,R[43],E,E,7,[[["self"]],["fail"]]],[11,"into",R[46],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[49],E,E,24,[[["self"]],[T]]],[11,R[50],E,E,24,[[["self"],[T]]]],[11,R[31],E,E,24,[[[U]],[R[19]]]],[11,R[32],E,E,24,[[],[R[19]]]],[11,R[40],E,E,24,[[["self"]],[T]]],[11,R[30],E,E,24,[[["self"]],[T]]],[11,R[39],E,E,24,[[["self"]],[R[41]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[31],E,E,25,[[[U]],[R[19]]]],[11,R[32],E,E,25,[[],[R[19]]]],[11,R[40],E,E,25,[[["self"]],[T]]],[11,R[30],E,E,25,[[["self"]],[T]]],[11,R[39],E,E,25,[[["self"]],[R[41]]]],[11,R[51],E,E,25,[[["k"],["self"]],["bool"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[31],E,E,12,[[[U]],[R[19]]]],[11,R[32],E,E,12,[[],[R[19]]]],[11,R[40],E,E,12,[[["self"]],[T]]],[11,R[30],E,E,12,[[["self"]],[T]]],[11,R[39],E,E,12,[[["self"]],[R[41]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[31],E,E,13,[[[U]],[R[19]]]],[11,R[32],E,E,13,[[],[R[19]]]],[11,R[40],E,E,13,[[["self"]],[T]]],[11,R[30],E,E,13,[[["self"]],[T]]],[11,R[39],E,E,13,[[["self"]],[R[41]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[31],E,E,14,[[[U]],[R[19]]]],[11,R[32],E,E,14,[[],[R[19]]]],[11,R[40],E,E,14,[[["self"]],[T]]],[11,R[30],E,E,14,[[["self"]],[T]]],[11,R[39],E,E,14,[[["self"]],[R[41]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[31],E,E,9,[[[U]],[R[19]]]],[11,R[32],E,E,9,[[],[R[19]]]],[11,R[40],E,E,9,[[["self"]],[T]]],[11,R[30],E,E,9,[[["self"]],[T]]],[11,R[39],E,E,9,[[["self"]],[R[41]]]],[11,"into",R[47],E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[31],E,E,26,[[[U]],[R[19]]]],[11,R[32],E,E,26,[[],[R[19]]]],[11,R[40],E,E,26,[[["self"]],[T]]],[11,R[30],E,E,26,[[["self"]],[T]]],[11,R[39],E,E,26,[[["self"]],[R[41]]]],[11,"into_future",E,E,26,[[],["f"]]],[11,"into",R[48],E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[49],E,E,16,[[["self"]],[T]]],[11,R[50],E,E,16,[[["self"],[T]]]],[11,R[31],E,E,16,[[[U]],[R[19]]]],[11,R[32],E,E,16,[[],[R[19]]]],[11,R[40],E,E,16,[[["self"]],[T]]],[11,R[30],E,E,16,[[["self"]],[T]]],[11,R[39],E,E,16,[[["self"]],[R[41]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[49],E,E,17,[[["self"]],[T]]],[11,R[50],E,E,17,[[["self"],[T]]]],[11,R[42],E,E,17,[[["self"]],[R[45]]]],[11,R[31],E,E,17,[[[U]],[R[19]]]],[11,R[32],E,E,17,[[],[R[19]]]],[11,R[40],E,E,17,[[["self"]],[T]]],[11,R[30],E,E,17,[[["self"]],[T]]],[11,R[39],E,E,17,[[["self"]],[R[41]]]],[11,R[51],E,E,17,[[["k"],["self"]],["bool"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[31],E,E,27,[[[U]],[R[19]]]],[11,R[32],E,E,27,[[],[R[19]]]],[11,R[40],E,E,27,[[["self"]],[T]]],[11,R[30],E,E,27,[[["self"]],[T]]],[11,R[39],E,E,27,[[["self"]],[R[41]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[42],E,E,28,[[["self"]],[R[45]]]],[11,R[31],E,E,28,[[[U]],[R[19]]]],[11,R[32],E,E,28,[[],[R[19]]]],[11,R[40],E,E,28,[[["self"]],[T]]],[11,R[30],E,E,28,[[["self"]],[T]]],[11,R[39],E,E,28,[[["self"]],[R[41]]]],[11,R[43],E,E,28,[[["self"]],["fail"]]],[11,"into",E,E,17,[[],[["u8"],["vec",["u8"]]]]],[11,R[56],E,E,16,[[],[R[53]]]],[11,"from",E,E,17,[[["str"]],[R[52]]]],[11,"from",E,E,17,[[],[R[52]]]],[11,"from",E,E,17,[[[R[45]]],[R[52]]]],[11,"from",E,E,17,[[["vec",["u8"]],["u8"]],[R[52]]]],[11,"clone",E,E,16,[[["self"]],[R[53]]]],[11,"clone",E,E,17,[[["self"]],[R[52]]]],[11,"eq",E,E,17,[[[R[52]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[52]],["self"]],["bool"]]],[11,"fmt",E,E,17,[[[R[54]],["self"]],[[R[19],["error"]],["error"]]]],[11,"fmt",E,E,16,[[[R[54]],["self"]],[[R[19],["error"]],["error"]]]],[11,"fmt",E,E,17,[[[R[54]],["self"]],[[R[19],["error"]],["error"]]]],[11,R[33],R[34],E,2,[[["self"]],[["poll",[R[0]]],[R[0]]]]],[11,R[35],E,E,2,[[["self"]],[R[36]]]],[11,R[37],E,E,2,[[["self"]],[["poll",[R[0]]],[R[0],[R[6]]]]]],[11,R[38],E,E,2,[[["self"]],["bool"]]],[11,R[55],E,E,2,[[["self"]],[[R[0],["u64"]],["u64"]]]],[11,R[16],R[29],E,23,[[["self"]],[R[12]]]],[11,R[16],R[44],E,6,[[["self"]],[R[12]]]],[11,"id",R[46],E,24,[[["self"]],["keyid"]]],[11,"as_ref",R[34],E,3,[[["self"]]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[["str"]],["self"]]],[11,"from",E,E,2,[[],["self"]]],[11,"from",E,E,2,[[[R[45]]],["self"]]],[11,"from",E,E,2,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",E,E,2,[[["bytes"]],["self"]]],[11,"from",E,E,3,[[["bytes"]],["self"]]],[11,"from",R[44],E,7,[[["e"]],["self"]]],[11,"from",E,E,7,[[[R[12]]],["self"]]],[11,"from",E,E,7,[[["box",["error"]],["error"]],["self"]]],[11,"clone",R[46],E,24,[[["self"]],["self"]]],[11,R[56],R[34],E,2,[[],["self"]]],[11,R[56],R[46],E,12,[[],[R[10]]]],[11,"eq",E,E,25,[[["self"],["keyid"]],["bool"]]],[11,"ne",E,E,25,[[["self"],["keyid"]],["bool"]]],[11,"fmt",R[34],E,21,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",R[29],E,22,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",E,E,23,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",R[44],E,6,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",E,E,7,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",R[48],E,28,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",R[34],E,20,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,2,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",E,E,3,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,21,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",R[29],E,4,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,22,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,23,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",R[44],E,6,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,7,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",R[46],E,24,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",E,E,25,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,12,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,9,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",E,E,13,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",E,E,14,[[[R[54]],["self"]],[R[19]]]],[11,"fmt",R[47],E,26,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",R[48],E,27,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",E,E,28,[[["self"],[R[54]]],[R[19]]]],[11,"fmt",R[1],E,18,[[["self"],[R[54]]],[R[19]]]],[11,"hash",R[46],E,25,[[["self"],["__h"]]]],[11,"source",R[34],E,21,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"source",R[29],E,22,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"source",R[48],E,28,[[["self"]],[[R[0],["error"]],["error"]]]],[11,"remaining",R[34],E,3,[[["self"]],["usize"]]],[11,"bytes",E,E,3,[[["self"]]]],[11,"advance",E,E,3,[[["self"],["usize"]]]],[11,"poll",R[47],E,26,[[["self"]],["poll"]]],[11,"poll",R[48],E,27,[[["self"]],[[R[0]],["poll",[R[0]]]]]],[11,"start_send",E,E,27,[[["self"]],["startsend"]]],[11,"poll_complete",E,E,27,[[["self"]],["poll"]]],[11,"close",E,E,27,[[["self"]],["poll"]]],[11,"poll_buf",R[34],E,20,[[["self"]],[["poll",[R[0]]],[R[0]]]]],[11,R[35],E,E,20,[[["self"]],[R[36]]]],[11,R[43],R[44],E,7,[[["self"]],["fail"]]],[11,"name",E,E,6,[[["self"]],[["str"],[R[0],["str"]]]]],[11,"cause",E,E,6,[[["self"]],[[R[0],["fail"]],["fail"]]]],[11,R[57],E,E,6,[[["self"]],[[R[0],[R[57]]],[R[57]]]]],[11,"text",R[48],"Create a new text WebSocket message from a stringable.",17,[[["s"]],[R[52]]]],[11,"binary",E,"Create a new binary WebSocket message by converting to Vec.",17,[[["b"]],[R[52]]]],[11,"is_text",E,"Indicates whether a message is a text message.",17,[[["self"]],["bool"]]],[11,"is_binary",E,"Indicates whether a message is a binary message.",17,[[["self"]],["bool"]]],[11,"is_ping",E,"Indicates whether a message is a ping message.",17,[[["self"]],["bool"]]],[11,"is_pong",E,"Indicates whether a message is a pong message.",17,[[["self"]],["bool"]]],[11,"len",E,"Get the length of the WebSocket message.",17,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns true if the WebSocket message has no content. For…",17,[[["self"]],["bool"]]],[11,"into_data",E,"Consume the WebSocket and return it as binary data.",17,[[],[["u8"],["vec",["u8"]]]]],[11,"into_text",E,"Attempt to consume the WebSocket message and convert it to…",17,[[],[["error"],[R[19],[R[45],"error"]],[R[45]]]]],[11,"to_text",E,"Attempt to get a &str from the WebSocket message, this…",17,[[["self"]],[["str"],["error"],[R[19],["str","error"]]]]]],"p":[[8,R[58]],[8,R[59]],[3,"Body"],[3,"Data"],[3,R[2]],[8,R[60]],[3,R[61]],[3,"Error"],[8,R[24]],[4,"Entry"],[8,R[62]],[8,R[63]],[3,R[64]],[3,R[65]],[3,R[66]],[8,R[28]],[3,R[67]],[4,"Message"],[3,R[68]],[8,"App"],[3,R[69]],[3,"Error"],[3,R[70]],[3,R[71]],[3,R[72]],[3,"KeyId"],[3,R[73]],[3,R[74]],[3,"Error"]]};
searchIndex["izanami_xtask"]={"doc":E,"i":[],"p":[]};
addSearchOptions(searchIndex);initSearch(searchIndex);