resources:
  containers:
    - container: tarpaulin
      image: xd009642/tarpaulin:latest
      options: --security-opt seccomp=unconfined

jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    CARGO_TERM_VERBOSE: true
    OPENSSL_DIR: C:\OpenSSL
    OPENSSL_VERSION: 1_1_0j
  steps:
  - script: |
      mkdir %OPENSSL_DIR%
      curl -sSfO http://slproweb.com/download/Win64OpenSSL-%OPENSSL_VERSION%.exe
      Win64OpenSSL-%OPENSSL_VERSION%.exe /SILENT /VERYSILENT /SP- /DIR=%OPENSSL_DIR%
    displayName: 'install OpenSSL'

  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain stable
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo '##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin'
    displayName: 'install rust'

  - script: |
      rustup --version
      rustc --version
      cargo --version
    displayName: 'show toolchain version'

  - bash: .ci/sync-local-registry.sh
    displayName: 'sync local registry'

  - bash: .ci/run-test.sh
    displayName: 'run test'

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  variables:
    CARGO_TERM_VERBOSE: true
  steps:
  - script: |
      curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: 'install rustup'

  - script: |
      rustup --version
      rustc --version
      cargo --version
    displayName: 'show toolchain version'

  - script: .ci/sync-local-registry.sh
    displayName: 'sync local registry'

  - script: bash .ci/run-test.sh
    displayName: 'run test'

- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    CARGO_TERM_VERBOSE: true
  strategy:
    matrix:
      stable:
        rust_toolchain: stable
      beta:
        rust_toolchain: beta
      nightly:
        rust_toolchain: nightly
      minimum_supported:
        rust_toolchain: 1.31.1
  steps:
  - script: |
      curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain $RUST_TOOLCHAIN -y
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: 'install rustup'

  - script: |
      rustup --version
      rustc --version
      cargo --version
    displayName: 'show toolchain version'

  - script: |
      rustup component add rustfmt-preview clippy-preview
    displayName: 'install supplemental components'
    condition: eq(variables['rust_toolchain'], 'stable')

  - bash: .ci/sync-local-registry.sh
    displayName: 'sync local registry'

  - script: bash .ci/run-test.sh
    displayName: 'run test'
    condition: ne(variables['rust_toolchain'], 'nightly')

  - script: bash .ci/run-test.sh || true
    displayName: 'run test (allow failure)'
    condition: eq(variables['rust_toolchain'], 'nightly')

  - bash: >-
      rm -rf target/doc &&
      bash .ci/build-doc.sh &&
      bash .ci/deploy-doc.sh
    displayName: 'deploy API doc'
    condition: eq(variables['rust_toolchain'], 'stable')
    env:
      GH_TOKEN: $(myGitHubToken)

- job: coverage
  pool:
    vmImage: 'ubuntu-16.04'
  container: tarpaulin
  variables:
    CARGO_TERM_VERBOSE: true
  steps:
  - script: |
      rustup --version
      rustc --version
      cargo --version
      cargo tarpaulin --version
    displayName: 'show toolchain version'

  - script: .ci/sync-local-registry.sh
    displayName: 'sync local registry'

  - bash: .ci/run-coverage-test.sh
    displayName: 'run coverage test'
    env:
      CODECOV_TOKEN: $(myCodecovToken)
