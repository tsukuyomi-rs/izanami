name: CI Workflow

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_VERBOSE: true

jobs:
  Test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        rust_toolchain: [stable, beta, nightly]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_toolchain }}
        override: true

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace

  Lint:
    runs-on: ubuntu-18.04
    env:
      RUSTFLAGS: "-D warnings"
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Format check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --all-targets

  DeployMasterDoc:
    runs-on: ubuntu-18.04
    container:
      image: rustops/crates-build-env:latest
      options: --memory 3221225472
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    # TODO:
    # * restrict network access during building docs.
    # * restrict all write access expect target/
    - name: Build API docs
      uses: actions-rs/cargo@v1
      with:
        command: xtask
        args: script docs

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: published-docs
        path: target/doc

    - name: Deply to GitHub Pages
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v2.3.1
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./target/doc

  Coverage:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install grcov
      run: |
        curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
        mkdir -pv $HOME/.grcov/bin
        mv -v ./grcov $HOME/.grcov/bin
        echo ::add-path::$HOME/.grcov/bin
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        profile: minimal
        override: true

    - name: Run coverage test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace
      env:
        CARGO_INCREMENTAL: 0
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"

    - name: Run coverage test (with --all-features)
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --package izanami --all-features
      env:
        CARGO_INCREMENTAL: 0
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"

    - name: Collect coverage reports
      uses: actions-rs/grcov@v0.1.2
      if: success()
      id: coverage

    - name: Send report to Codecov
      uses: codecov/codecov-action@v1.0.3
      if: success()
      with:
        file: ./lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}